Задание 1. Реализуйте класс Worker, который будет иметь следующие свойства: name,
surname, rate (ставка за день работы), days (количество отработанных дней). Также класс
должен иметь метод GetSalary(), который будет выводить зарплату работника. Зарплата -
это произведение ставки rate на количество отработанных дней days;
----------------------------------------------------------------------------------------
									
using System;									

class Worker
{
    public string Name { get; set; }
    public string Surname { get; set; }
    public double Rate { get; set; }
    public int Days { get; set; }

    // Конструктор класса Worker
    public Worker(string name, string surname, double rate, int days)
    {
        Name = name;
        Surname = surname;
        Rate = rate;
        Days = days;
    }

    // Метод для расчета зарплаты работника
    public double GetSalary()
    {
        return Rate * Days;
    }
}

class Program
{
    static void Main()
    {
        Console.WriteLine("Введите имя работника:");
        string name = Console.ReadLine();

        Console.WriteLine("Введите фамилию работника:");
        string surname = Console.ReadLine();

        Console.WriteLine("Введите ставку за день работы:");
        double rate = Convert.ToDouble(Console.ReadLine());

        Console.WriteLine("Введите количество отработанных дней:");
        int days = Convert.ToInt32(Console.ReadLine());

        // Создаем объект Worker с введенными пользователем параметрами
        Worker worker = new Worker(name, surname, rate, days);

        // Выводим информацию о работнике
        Console.WriteLine("Имя: " + worker.Name);
        Console.WriteLine("Фамилия: " + worker.Surname);
        Console.WriteLine("Зарплата: " + worker.GetSalary());
    }
}
---------------------------------------------------------------------------------------
Задание 2. Модифицируйте класс Worker из предыдущей задачи, сделайте все его
свойства приватными, а для их чтения сделайте методы-геттеры;
---------------------------------------------------------------------------------------
using System;

class Worker
{
    private string Name { get; }
    private string Surname { get; }
    private double Rate { get; }
    private int Days { get; }

    // Конструктор класса Worker
    public Worker(string name, string surname, double rate, int days)
    {
        Name = name;
        Surname = surname;
        Rate = rate;
        Days = days;
    }

    // Методы-геттеры для чтения значений свойств
    public string GetName()
    {
        return Name;
    }

    public string GetSurname()
    {
        return Surname;
    }

    public double GetRate()
    {
        return Rate;
    }

    public int GetDays()
    {
        return Days;
    }

    // Метод для расчета зарплаты работника
    public double GetSalary()
    {
        return Rate * Days;
    }
}

class Program
{
    static void Main()
    {
        Console.WriteLine("Введите имя работника:");
        string name = Console.ReadLine();

        Console.WriteLine("Введите фамилию работника:");
        string surname = Console.ReadLine();

        Console.WriteLine("Введите ставку за день работы:");
        double rate = Convert.ToDouble(Console.ReadLine());

        Console.WriteLine("Введите количество отработанных дней:");
        int days = Convert.ToInt32(Console.ReadLine());

        // Создаем объект Worker с введенными пользователем параметрами
        Worker worker = new Worker(name, surname, rate, days);

        // Выводим информацию о работнике, используя методы-геттеры
        Console.WriteLine("Имя: " + worker.GetName());
        Console.WriteLine("Фамилия: " + worker.GetSurname());
        Console.WriteLine("Зарплата: " + worker.GetSalary());
    }
}
---------------------------------------------------------------------------------------
Задание 3. Создайте класс Calculation , в котором будет одно свойство calculationLine.
методы: SetCalculationLine который будет который будет изменять значение свойства,
SetLastSymbolCalculationLine который будет в конец строки прибавлять символ,
GetCalculationLine который будет выводить значение свойства, GetLastSymbol получение
последнего символа, DeleteLastSymbol удаление последнего символа из строки;
---------------------------------------------------------------------------------------
using System;

class Calculation
{
    private string calculationLine;

    public Calculation()
    {
        calculationLine = "";
    }

    public void SetCalculationLine(string newLine)
    {
        calculationLine = newLine;
    }

    
    public void SetLastSymbolCalculationLine(char symbol)
    {
        calculationLine += symbol;
    }

    public string GetCalculationLine()
    {
        return calculationLine;
    }

    public char GetLastSymbol()
    {
        if (calculationLine.Length > 0)
        {
            return calculationLine[calculationLine.Length - 1];
        }
        else
        {
            Console.WriteLine("Строка расчета пуста.");
            return '\0';
        }
    }

    public void DeleteLastSymbol()
    {
        if (calculationLine.Length > 0)
        {
            calculationLine = calculationLine.Substring(0, calculationLine.Length - 1);
        }
        else
        {
            Console.WriteLine("Строка расчета пуста. Нечего удалять.");
        }
    }
}

class Program
{
    static void Main()
    {
        Calculation calc = new Calculation();

        calc.SetCalculationLine("2 + 3 * 4");

        Console.WriteLine("Исходная строка расчета: " + calc.GetCalculationLine());

        calc.SetLastSymbolCalculationLine('=');

        Console.WriteLine("Строка расчета после добавления символа: " + calc.GetCalculationLine());

        char lastSymbol = calc.GetLastSymbol();
        Console.WriteLine("Последний символ в строке расчета: " + lastSymbol);

        calc.DeleteLastSymbol();

        Console.WriteLine("Строка расчета после удаления последнего символа: " + calc.GetCalculationLine());
    }
}